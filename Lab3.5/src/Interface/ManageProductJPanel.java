/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Product;
import Business.ProductCatalog;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author devinajaiswal
 */
public class ManageProductJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageAccountPanel
     */
   private JPanel userProcessContainer;
   private ProductCatalog productList;
    public ManageProductJPanel(JPanel userProcessContainer, ProductCatalog productList) {
        initComponents();
       this.userProcessContainer=userProcessContainer;
        this.productList=productList;
    
    populateTable();
    }

    
    private void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) productJTable.getModel();
        dtm.setRowCount(0);
        
        for(Product product: productList.getProductList()){
            Object[] row=new Object[4];
            row[0]=product;
            row[1]=product.getAvailNum();
            row[2]=product.getPrice();
            row[3]=product.getDescription();
            dtm.addRow(row);
      
            
            
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        productJTable = new javax.swing.JTable();
        btnSearch = new javax.swing.JButton();
        btnDetails = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        searchTextField = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(900, 600));

        productJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product Name", "Available Number", "Price", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(productJTable);
        if (productJTable.getColumnModel().getColumnCount() > 0) {
            productJTable.getColumnModel().getColumn(0).setResizable(false);
            productJTable.getColumnModel().getColumn(1).setResizable(false);
            productJTable.getColumnModel().getColumn(2).setResizable(false);
            productJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnDetails.setText("View Details ");
        btnDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailsActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete Product");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        searchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextFieldActionPerformed(evt);
            }
        });

        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(189, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(btnBack)))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(searchTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDetails)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDelete)
                .addContainerGap(237, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
         String productName= searchTextField.getText();

        DefaultTableModel dtm = (DefaultTableModel) productJTable.getModel();

        dtm.setRowCount(0);
   
        
   if(productName.length()==0)
       JOptionPane.showMessageDialog(null, "Please enter the product name");
   else{    
        for(Product product: productList.getProductList())
   
        {  
        
              if(product.getName().equals(productName))

            {
          
            Object[] row=new Object[4];
          
            row[0]=product;
            row[1]=product.getAvailNum();
            row[2]=product.getPrice();
            row[3]=product.getDescription();
            dtm.addRow(row);
            }
        }}
        if(productJTable.getRowCount()==0)
        JOptionPane.showMessageDialog(null, "No such record found!");
        
        
        
       
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailsActionPerformed
        // TODO add your handling code here:
         int selectedRow =productJTable.getSelectedRow();
        if(selectedRow<0){
        JOptionPane.showMessageDialog(null, "Please select any row!");
        
        }
        else{
        Product account=(Product) productJTable.getValueAt(selectedRow,0);
        ViewProductJPanel panel= new ViewProductJPanel(userProcessContainer,account);
         userProcessContainer.add("ViewProductJPanel",panel);
        CardLayout layout=(CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
        
    }//GEN-LAST:event_btnDetailsActionPerformed

    private void searchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextFieldActionPerformed
        // TODO add your handling code here:
        Product result= productList.searchProduct(searchTextField.getText());
        if(result==null){
                  JOptionPane.showMessageDialog(null, "Product Name you entered does not exist","information", JOptionPane.WARNING_MESSAGE);
            
        }
        else{
        ViewProductJPanel panel=new ViewProductJPanel(userProcessContainer, result);
        userProcessContainer.add("ViewProductJPanel",panel);
        CardLayout layout=(CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
        }
    }//GEN-LAST:event_searchTextFieldActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        CardLayout layout=(CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow =productJTable.getSelectedRow();
        if(selectedRow>=0)
        {
            int dialogButton= JOptionPane.YES_NO_OPTION;
            int DialogResult=JOptionPane.showConfirmDialog(null, "Would you like to delete the product?", "Warning", dialogButton);
         if(dialogButton == JOptionPane.YES_OPTION){
         Product product=(Product) productJTable.getValueAt(selectedRow, 0);
         productList.deleteProduct(product);
         populateTable();
         
         
         }
        
        }
        else{
        JOptionPane.showMessageDialog(null, "Please select any row!");
        }
        
        
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDetails;
    private javax.swing.JButton btnSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable productJTable;
    private javax.swing.JTextField searchTextField;
    // End of variables declaration//GEN-END:variables
}
